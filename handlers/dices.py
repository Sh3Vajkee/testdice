from asyncio import sleep
from aiogram import Dispatcher, types
from aiogram.dispatcher.filters import Text
from keyboars import get_dice_keyboard


async def cmd_start(message: types.Message):
    await message.answer('–í—ã–±–µ—Ä–∏—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—É', reply_markup=get_dice_keyboard())


async def cmd_stop(message: types.Message):
    await message.answer('–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ —É–¥–∞–ª–µ–Ω–∞.\n–ß—Ç–æ–±—ã –≤–µ—Ä–Ω—É—Ç—å –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –Ω–∞–∂–º–∏—Ç–µ\n/start', reply_markup=types.ReplyKeyboardRemove())


async def cmd_dice(message: types.Message):
    msg = await message.answer_dice()
    await sleep(3)
    await message.answer(f'–í–∞–º –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ - <b>{msg.dice.value}</b>!')


async def cmd_darts(message: types.Message):
    msg = await message.answer_dice('üéØ')
    await sleep(3)

    result = msg.dice.value
    if result == 1:
        await message.answer('–ù–µ—É–¥–∞—á–Ω–æ! –í—ã –ø—Ä–æ–º–∞–∑–∞–ª–∏.')
    elif result == 6:
        await message.answer(f'–í —è–±–ª–æ—á–∫–æ! –í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {result} –æ—á–∫–æ–≤.')
    elif result == 5:
        await message.answer(f'–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {result} –æ—á–∫–æ–≤.')
    else:
        await message.answer(f'–í—ã –∑–∞—Ä–∞–±–æ—Ç–∞–ª–∏ {result} –æ—á–∫–∞.')


async def cmd_basket(message: types.Message):
    msg = await message.answer_dice('üèÄ')
    await sleep(4)

    result = msg.dice.value
    if result in [1, 2, 3]:
        await message.answer('–ü—Ä–æ–º–∞—Ö!')
    else:
        await message.answer('–£–¥–∞—á–Ω–æ–µ –ø–æ–ø–∞–¥–∞–Ω–∏–µ!')


async def cmd_football(message: types.Message):
    msg = await message.answer_dice('‚öΩ')
    await sleep(4)

    result = msg.dice.value
    if result == 1:
        await message.answer('–ü—Ä–æ–º–∞—Ö! –í—ã—à–µ –≤–æ—Ä–æ—Ç.')
    elif result == 2:
        await message.answer('–®—Ç–∞–Ω–≥–∞!')
    elif result == 5:
        await message.answer('–ì–æ–ª! –†–æ–≤–Ω–æ –≤ –¥–µ–≤—è—Ç–æ—á–∫—É!')
    else:
        await message.answer('–ì–æ–ª!')


async def cmd_bowling(message: types.Message):
    msg = await message.answer_dice('üé≥')
    await sleep(3)

    result = msg.dice.value
    if result == 1:
        await message.answer('–ü—Ä–æ–º–∞—Ö! –í—ã –≤—ã–±–∏–ª–∏ 0 –æ—á–∫–æ–≤.')
    elif result == 6:
        await message.answer('–°—Ç—Ä–∞–π–∫! –í—ã –≤—ã–±–∏–ª–∏ 6 –æ—á–∫–æ–≤.')
    elif result == 2:
        await message.answer('–í—ã –≤—ã–±–∏–ª–∏ 1 –æ—á–∫–æ.')
    else:
        await message.answer(f'–í—ã –≤—ã–±–∏–ª–∏ {result} –æ—á–∫–∞.')


def dices_handlers(dp: Dispatcher):
    dp.register_message_handler(cmd_start, commands='start')
    dp.register_message_handler(cmd_stop, commands='stop')
    dp.register_message_handler(cmd_dice, Text(equals='üé≤–°—ã–≥—Ä–∞—Ç—å'))
    dp.register_message_handler(cmd_darts, Text(equals='üéØ–°—ã–≥—Ä–∞—Ç—å'))
    dp.register_message_handler(cmd_basket, Text(equals='üèÄ–°—ã–≥—Ä–∞—Ç—å'))
    dp.register_message_handler(cmd_football, Text(equals='‚öΩ–°—ã–≥—Ä–∞—Ç—å'))
    dp.register_message_handler(cmd_bowling, Text(equals='üé≥–°—ã–≥—Ä–∞—Ç—å'))
